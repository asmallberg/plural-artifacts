## The cloud provider to use, currently only aws is supported
provider: aws
## managed or unmanaged, currently only managed is supported
type: managed

cluster:
  ## The name of the cluster
  name: plural
  ## The version of Kubernetes to deploy
  kubernetesVersion: ""
  ## The cidr blocks for pods
  podCidrBlocks:
    - 192.168.0.0/16
  ## The cidr blocks for services
  serviceCidrBlocks: [] # TODO: check if we should be setting this

  aws:
    ## The region to deploy the cluster to
    region: ""
    ## The name of the ssh key to use for the cluster
    sshKeyName: default
    ## The cluster addons to deploy
    addons:
      - conflictResolution: overwrite
        name: kube-proxy
        version: v1.24.10-eksbuild.2
      - conflictResolution: overwrite
        name: vpc-cni
        version: v1.12.6-eksbuild.1
      - conflictResolution: overwrite
        name: coredns
        version: v1.9.3-eksbuild.3

    network:
      vpc:
        id: ""
        cidrBlock: ""
        ipv6: # NOTE: setting `ipv6: {}` will enable ipv6 and auto generate the cidr block. Needed for migration.
          cidrBlock: ""
          poolId: ""
          egressOnlyInternetGatewayId: ""
        internetGatewayId: ""
        tags: {}
        availabilityZoneUsageLimit: 3 # TODO: is set to 3 by default
        availabilityZoneSelection: Ordered # TODO: set by default to Ordered. Can be Ordered or Random
      subnets: []
      # - id: ""
      #   cidrBlock: ""
      #   ipv6CidrBlock: ""
      #   availabilityZone: ""
      #   isPublic: false
      #   isIpv6: false
      #   routeTableId: ""
      #   natGatewayId: ""
      #   tags: {}
      cni:
        cniIngressRules: []
        # - description: ""
        #   fromPort: 0
        #   toPort: 0
        #   protocol: "" # TODO: find valid values. Can be tcp.
      securityGroupOverrides: {}
    identityRef: {}
    secondaryCidrBlock: ""
    partition: ""
    roleName: ""
    roleAdditionalPolicies: []
    logging:
      apiServer: false
      audit: false
      authenticator: false
      controllerManager: false
      scheduler: false
    encryptionConfig:
      provider: ""
      resources: []
    additionalTags: {}
    iamAuthenticatorConfig:
      mapRoles: []
      # - rolearn: ""
      #   username: ""
      #   groups: []
      mapUsers: []
      # - userarn: ""
      #   username: ""
      #   groups: []
    endpointAccess:
      public: true
      publicCIDRs: []
      private: false
    bastion:
      enabled: false
      disableIngressRules: false
      allowedCIDRBlocks: []
      instanceType: ""
      ami: ""
    tokenMethod: "" # iam-authenticator
    associateOIDCProvider: true
    oidcIdentityProviderConfig:
      clientId: ""
      groupsClaim: ""
      groupsPrefix: ""
      identityProviderConfigName: ""
      issuerUrl: ""
      requiredClaims: {}
      usernameClaim: ""
      usernamePrefix: ""
      tags: {}
    vpcCni:
      disable: false
      env: []
      # - name: ""
      #   value: ""
    kubeProxy:
      disable: false

  azure:
    # Name of AzureClusterIdentity to be used when reconciling this cluster.
    clusterIdentityName: "cluster-identity"
    # Type of Azure Identity used.
    # One of: ServicePrincipal, ServicePrincipalCertificate, UserAssignedMSI or ManualServicePrincipal.
    clusterIdentityType: "ServicePrincipal"
    # Service Principal client ID. Both Service Principal and User Assigned MSI can use this field.
    clientID: ""
    # Service Principal password.
    clientSecret: ""
    # Name of Secret containing clientSecret.
    clientSecretName: "cluster-identity-secret"
    # Azure resource ID for the User Assigned MSI resource.
    resourceID:
    # Service Principal primary tenant ID.
    tenantID: ""
    # GUID of the Azure subscription to hold this cluster.
    subscriptionID: ""
    # String matching one of the canonical Azure region names.
    # Examples: "westus2", "eastus".
    location: ""
    # Name of the Azure resource group for this AKS Cluster.
    resourceGroupName: ""
    # String literal containing an SSH public key base64 encoded.
    sshPublicKey: ""

workers:
  defaults:
    aws:
      replicas: 0 # TODO: update MachinePool to support default values
      labels: {}
      annotations:
        cluster.x-k8s.io/replicas-managed-by: external-autoscaler
      spec:
        amiType: AL2_x86_64 # AL2_x86_64, AL2_x86_64_GPU, AL2_ARM_64
        amiVersion: ""
        capacityType: onDemand # onDemand, spot
        diskSize: 50
        instanceType: t3a.large
        roleName: ""
        scaling:
          maxSize: 27
          minSize: 0
        availabilityZones:
          - eu-central-1a
        subnetIDs: []
        labels:
          plural.sh/scalingGroup: small-burst-on-demand
          plural.sh/capacityType: ON_DEMAND
          plural.sh/performanceType: BURSTABLE
        taints:
          - key: plural.sh/capacityType
            value: SPOT
            effect: no-schedule
        updateConfig:
          maxUnavailable: 1
          # maxSurge: 1
        additionalTags:
          test: test
        roleAdditionalPolicies:
          - test
  aws:
    test-pool-0:
      # annotations: {}
      # labels: {}
      replicas: 1
      spec:
        labels: {} # TODO: allow this to not be set
        additionalTags: {} # TODO: allow this to not be set
        # amiType: ""
        # capacityType: spot
    test-pool-1:
      annotations:
        cluster.x-k8s.io/replicas-managed-by: external-autoscaler-test
      labels:
        test: test
      replicas: 0
      spec:
        amiType: AL2_x86_64_GPU
        capacityType: spot
        roleName: test
        instanceType: p3.2xlarge
        diskSize: 100
        scaling:
          maxSize: 5
          minSize: 2
        availabilityZones:
          - eu-central-1a
          - eu-central-1b
          - eu-central-1c
        subnetIDs: []
        labels: {}
        taints:
          - key: plural.sh/capacityType
            value: SPOT
            effect: no-schedule
          - key: nvidia.com/gpu
            value: "true"
            effect: no-schedule
        updateConfig:
          maxUnavailable: 1
        additionalTags: {}
        roleAdditionalPolicies: []
