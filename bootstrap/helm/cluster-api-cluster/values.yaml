provider: ""
## managed or unmanaged, currently only managed is supported
type: managed

cluster:
  ## The name of the cluster
  name: plural
  ## The version of Kubernetes to deploy
  kubernetesVersion: ""
  ## The cidr blocks for pods
  podCidrBlocks:
    - 192.168.0.0/16
  ## The cidr blocks for services
  serviceCidrBlocks: [] # TODO: check if we should be setting this

  ##################################
  ###         AWS CLUSTER        ###
  ##################################
  aws:
    ## The region to deploy the cluster to
    region: ""
    ## The name of the ssh key to use for the cluster
    sshKeyName: default
    ## The cluster addons to deploy
    addons:
      - conflictResolution: overwrite
        name: kube-proxy
        version: v1.24.10-eksbuild.2
      - conflictResolution: overwrite
        name: vpc-cni
        version: v1.12.6-eksbuild.1
      - conflictResolution: overwrite
        name: coredns
        version: v1.9.3-eksbuild.3

    network:
      vpc:
        id: ""
        cidrBlock: ""
        # ipv6: # NOTE: setting `ipv6: {}` will enable ipv6 and auto generate the cidr block. Needed for migration.
        #   cidrBlock: ""
        #   poolId: ""
        #   egressOnlyInternetGatewayId: ""
        internetGatewayId: ""
        tags: {}
        availabilityZoneUsageLimit: 3 # TODO: is set to 3 by default
        availabilityZoneSelection: Ordered # TODO: set by default to Ordered. Can be Ordered or Random
      subnets: []
      # - id: ""
      #   cidrBlock: ""
      #   ipv6CidrBlock: ""
      #   availabilityZone: ""
      #   isPublic: false
      #   isIpv6: false
      #   routeTableId: ""
      #   natGatewayId: ""
      #   tags: {}
      cni:
        cniIngressRules: []
        # - description: ""
        #   fromPort: 0
        #   toPort: 0
        #   protocol: "" # TODO: find valid values. Can be tcp.
      securityGroupOverrides: {}
    identityRef: {}
    secondaryCidrBlock: ""
    partition: ""
    roleName: ""
    roleAdditionalPolicies: []
    logging:
      apiServer: false
      audit: false
      authenticator: false
      controllerManager: false
      scheduler: false
    encryptionConfig:
      provider: ""
      resources: []
    additionalTags: {}
    iamAuthenticatorConfig:
      mapRoles: []
      # - rolearn: ""
      #   username: ""
      #   groups: []
      mapUsers: []
      # - userarn: ""
      #   username: ""
      #   groups: []
    endpointAccess:
      public: true
      publicCIDRs: []
      private: false
    bastion:
      enabled: false
      disableIngressRules: false
      allowedCIDRBlocks: []
      instanceType: ""
      ami: ""
    tokenMethod: "" # iam-authenticator
    associateOIDCProvider: true
    oidcIdentityProviderConfig:
      clientId: ""
      groupsClaim: ""
      groupsPrefix: ""
      identityProviderConfigName: ""
      issuerUrl: ""
      requiredClaims: {}
      usernameClaim: ""
      usernamePrefix: ""
      tags: {}
    vpcCni:
      disable: false
      env: []
      # - name: ""
      #   value: ""
    kubeProxy:
      disable: false

  ###################################
  ###        AZURE CLUSTER        ###
  ###################################
  azure:
    # Name of AzureClusterIdentity to be used when reconciling this cluster.
    clusterIdentityName: "cluster-identity"
    # Type of Azure Identity used.
    # One of: ServicePrincipal, ServicePrincipalCertificate, UserAssignedMSI or ManualServicePrincipal.
    clusterIdentityType: "ServicePrincipal"
    # Service Principal client ID. Both Service Principal and User Assigned MSI can use this field.
    clientID: ""
    # Service Principal password.
    clientSecret: ""
    # Name of Secret containing clientSecret.
    clientSecretName: "cluster-identity-secret"
    # Azure resource ID for the User Assigned MSI resource.
    resourceID: ""
    # Service Principal primary tenant ID.
    tenantID: ""
    # GUID of the Azure subscription to hold this cluster.
    subscriptionID: ""
    # String matching one of the canonical Azure region names.
    # Examples: "westus2", "eastus".
    location: ""
    # Name of the Azure resource group for this AKS Cluster.
    resourceGroupName: ""
    # String literal containing an SSH public key base64 encoded.
    sshPublicKey: ""

  google:
    # Project is the id of the project to deploy the cluster to.
    project: ""
    # Region represents the location (region or zone) in which the GKE cluster will be created.
    # Examples: "europe-central2" TODO: add more examples
    region: ""
    # EnableAutopilot indicates whether to enable autopilot for this GKE cluster.
    #
    # Note: Autopilot enabled clusters are not supported at this time.
    enableAutopilot: false
    # EnableWorkloadIdentity allows enabling workload identity during cluster creation when
    # EnableAutopilot is disabled. It allows workloads in your GKE clusters to impersonate
    # Identity and Access Management (IAM) service accounts to access Google Cloud services.
    # Ref: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
    enableWorkloadIdentity: true
    # ReleaseChannel is the release channel of the GKE cluster
    # One of: regular, rapid, stable
    releaseChannel: "stable"
    # Network encapsulates all things related to the GCP network.
    network:
      # AutoCreateSubnetworks: When set to true, the VPC network is created
      # in "auto" mode. When set to false, the VPC network is created in
      # "custom" mode.
      #
      # An auto mode VPC network starts with one subnet per region. Each
      # subnet has a predetermined range as described in Auto mode VPC
      # network IP ranges.
      #
      # Note: Only auto mode is supported at this time.
      autoCreateSubnetworks: true
    subnets:
      # Subnet name is always created as:
      # <clusterName>-<nameSuffix>
      - nameSuffix: subnetwork
        # CidrBlock is the range of internal addresses that are owned by this
        # subnetwork. Provide this property when you create the subnetwork. For
        # example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and
        # non-overlapping within a network. Only IPv4 is supported. This field
        # can be set only at resource creation time.
        cidrBlock: 10.0.32.0/20
        # Description is an optional description associated with the resource.
        description: ""
        # SecondaryCidrBlocks defines secondary CIDR ranges,
        # from which secondary IP ranges of a VM may be allocated
        secondaryCidrBlocks: {}
        # PrivateGoogleAccess defines whether VMs in this subnet can access
        # Google services without assigning external IP addresses
        privateGoogleAccess: true
        # EnableFlowLogs: Whether to enable flow logging for this subnetwork.
        # If this field is not explicitly set, it will not appear in get
        # listings. If not set the default behavior is to disable flow logging.
        enableFlowLogs: false
        # Purpose: The purpose of the resource.
        # If unspecified, the purpose defaults to PRIVATE_RFC_1918.
        # The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
        # One of:
        # - INTERNAL_HTTPS_LOAD_BALANCER - Subnet reserved for Internal HTTP(S) Load Balancing.
        # - PRIVATE - Regular user created or automatically created subnet.
        # - PRIVATE_RFC_1918 - Regular user created or automatically created subnet.
        # - PRIVATE_SERVICE_CONNECT - Subnetworks created for Private Service Connect in the producer network.
        # - REGIONAL_MANAGED_PROXY - Subnetwork used for Regional Internal/External HTTP(S) Load Balancing.
        purpose: "PRIVATE_RFC_1918"

workers:
  defaults:
    #########################################
    ###        AWS WORKER DEFAULTS        ###
    #########################################
    aws:
      replicas: 0 # TODO: update MachinePool to support default values
      labels: {}
      annotations:
        cluster.x-k8s.io/replicas-managed-by: external-autoscaler
      spec:
        amiType: AL2_x86_64 # AL2_x86_64, AL2_x86_64_GPU, AL2_ARM_64
        amiVersion: ""
        capacityType: onDemand # onDemand, spot
        diskSize: 50
        instanceType: t3a.large
        roleName: ""
        scaling:
          maxSize: 5
          minSize: 1
        availabilityZones: []
        subnetIDs: []
        labels: {}
        taints: {}
        updateConfig:
          maxUnavailable: 1
          # maxSurge: 1
        additionalTags: {}
        roleAdditionalPolicies: []
    #########################################
    ###       AZURE WORKER DEFAULTS       ###
    #########################################
    azure:
      replicas: 0
      labels: {}
      spec:
        additionalTags: {}
        mode: "User"
        sku: "Standard_D8as_v5"
        osDiskSizeGB: 50
        availabilityZones:
          - "1"
        nodeLabels:
          plural.sh/scalingGroup: medium-sustained-on-demand
          plural.sh/capacityType: ON_DEMAND
          plural.sh/performanceType: SUSTAINED
        taints: {}
        scaling:
          maxSize: 5
          minSize: 1
        maxPods: 110
        osDiskType: "Managed"
        scaleSetPriority: "Regular"
    #########################################
    ###        GCP WORKER DEFAULTS        ###
    #########################################
    google:
      scaling:
        maxCount: 6
        minCount: 3
      kubernetesLabels: {}
      kubernetesTaints: {}
      additionalLabels: {}
      providerIDList: []
  #################################
  ###        AWS WORKERS        ###
  #################################
  aws:
    test-pool-0:
      # annotations: {}
      # labels: {}
      replicas: 1
      spec:
        labels: {} # TODO: allow this to not be set
        additionalTags: {} # TODO: allow this to not be set
        # amiType: ""
        # capacityType: spot
  #################################
  ###       AZURE WORKERS       ###
  #################################
  azure:
    pool0:
      replicas: 1
      spec:
        mode: "System"
        scaling:
          minSize: 1
          maxSize: 2
    pool1:
      replicas: 1
      spec:
        mode: "User"
        scaling:
          minSize: 2
          maxSize: 4
  #################################
  ###        GCP WORKERS        ###
  #################################
  google:
    machine-pool-1:
      replicas: 3
      scaling:
        maxCount: 6
        minCount: 3
      kubernetesLabels: {}
      kubernetesTaints: {}
      additionalLabels: {}
      providerIDList: []
