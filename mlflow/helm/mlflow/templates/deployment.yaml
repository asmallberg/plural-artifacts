apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlflow.fullname" . }}
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mlflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        {{- include "mlflow.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mlflow.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - mlflow
          - server
          args:
          - --backend-store-uri
          - $(BACKEND_STORE_URI)
          - --default-artifact-root
          - $(ARTIFACT_ROOT)
          - --host
          - "0.0.0.0"
          - --port
          - "5000"
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.database.credentials.secretName }}
                  key: {{ .Values.config.database.credentials.userKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.database.credentials.secretName }}
                  key: {{ .Values.config.database.credentials.passwordKey }}
            - name: BACKEND_STORE_URI
              value: postgresql://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@{{ .Values.config.database.host }}:{{ .Values.config.database.port }}/{{ .Values.config.database.dbname }}
            {{- if eq .Values.config.artifact.type "azure" }}
            - name: ARTIFACT_ROOT
              value: "wasbs://{{ .Values.config.artifact.azure.accountName }}@{{ .Values.config.artifact.azure.container }}.blob.core.windows.net/"
            {{- else if eq .Values.config.artifact.type "aws" }}
            - name: ARTIFACT_ROOT
              value: {{ .Values.config.artifact.aws.bucketUri }}
            {{- else if or (eq .Values.config.artifact.type "gcp") (eq .Values.config.artifact.type "google") }}
            - name: ARTIFACT_ROOT
              value: {{ .Values.config.artifact.gcp.bucketUri }}
            {{- end }}
          {{- if .Values.config.artifact.azure }}
          envFrom:
          - secretRef:
              name: {{ .Values.config.artifact.azure.existingSecret }}
          {{- end }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 45
            periodSeconds: 60
            httpGet:
              path: /
              port: http
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 2
            periodSeconds: 5
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
