apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "n8n.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /.n8n
              name: user-data
          ports:
            - name: http
              containerPort: 5678
              protocol: TCP
          env:
            - name: "N8N_PORT"
              value: {{ .Values.service.containerPort | default "5678" | quote }}
            #- name: DB_TYPE
            #  value: {{ .Values.database.type }}
            #- name: DB_POSTGRESDB_DATABASE
            #  value: {{ .Values.postgres.dbName }}
            #- name: DB_POSTGRESDB_HOST
            #  value: {{ .Values.database.host | quote }}
                  # maybe from secret, need to be dns probably
            #- name: DB_POSTGRESDB_PORT
            #  value: {{ .Values.database.port | quote }}
            #- name: DB_POSTGRESDB_SCHEMA
            #  value: {{ .Values.database.schema }}
            #- name: DB_POSTGRESDB_USER
            #  valueFrom:
            #    secretKeyRef:
            #      name: {{ .Values.database.secret }}
            #      key: username
            #- name: DB_POSTGRESDB_PASSWORD
            #  valueFrom:
            #    secretKeyRef:
            #      name: {{ .Values.database.secret }}
            #      key: password
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: user-data
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
