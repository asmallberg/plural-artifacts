kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-addressable-resolver
  labels:
    serving.knative.dev/release: "v0.26.0"
    # Labeled to facilitate aggregated cluster roles that act on Addressables.
    duck.knative.dev/addressable: "true"
    app.kubernetes.io/version: "0.26.0"
    app.kubernetes.io/part-of: knative-serving
# Do not use this role directly. These rules will be added to the "addressable-resolver" role.
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - routes
      - routes/status
      - services
      - services/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # Named like this to avoid clashing with eventing's existing `addressable-resolver` role
  # (which should be identical, but isn't guaranteed to be installed alongside serving).
  name: knative-serving-aggregated-addressable-resolver
  labels:
    serving.knative.dev/release: "v0.26.0"
    app.kubernetes.io/version: "0.26.0"
    app.kubernetes.io/part-of: knative-serving
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/addressable: "true"
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        serving.knative.dev/controller: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    serving.knative.dev/release: v0.26.0
  name: knative-serving-admin
rules: []
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/addressable: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    serving.knative.dev/release: v0.26.0
  name: knative-serving-aggregated-addressable-resolver
rules: []
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-core
  labels:
    serving.knative.dev/release: "v0.26.0"
    serving.knative.dev/controller: "true"
    app.kubernetes.io/version: "0.26.0"
    app.kubernetes.io/part-of: knative-serving
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces", "secrets", "configmaps", "endpoints", "services", "events", "serviceaccounts"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: [""]
    resources: ["endpoints/restricted"] # Permission for RestrictedEndpointsAdmission
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["namespaces/finalizers"] # finalizers are needed for the owner reference of the webhook
    verbs: ["update"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/finalizers"] # finalizers are needed for the owner reference of the webhook
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions", "customresourcedefinitions/status"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["serving.knative.dev", "autoscaling.internal.knative.dev", "networking.internal.knative.dev"]
    resources: ["*", "*/status", "*/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch", "watch"]
  - apiGroups: ["caching.internal.knative.dev"]
    resources: ["images"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  # These are the permissions needed by the Istio Ingress implementation.
  name: knative-serving-istio
  labels:
    serving.knative.dev/release: "v0.26.0"
    serving.knative.dev/controller: "true"
    networking.knative.dev/ingress-provider: istio
rules:
  - apiGroups: ["networking.istio.io"]
    resources: ["virtualservices", "gateways", "destinationrules"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-namespaced-admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    serving.knative.dev/release: "v0.26.0"
    app.kubernetes.io/version: "0.26.0"
    app.kubernetes.io/part-of: knative-serving
rules:
  - apiGroups: ["serving.knative.dev"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["networking.internal.knative.dev", "autoscaling.internal.knative.dev", "caching.internal.knative.dev"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-namespaced-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    serving.knative.dev/release: "v0.26.0"
    app.kubernetes.io/version: "0.26.0"
    app.kubernetes.io/part-of: knative-serving
rules:
  - apiGroups: ["serving.knative.dev"]
    resources: ["*"]
    verbs: ["create", "update", "patch", "delete"]
  - apiGroups: ["networking.internal.knative.dev", "autoscaling.internal.knative.dev", "caching.internal.knative.dev"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-namespaced-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    serving.knative.dev/release: "v0.26.0"
    app.kubernetes.io/version: "0.26.0"
    app.kubernetes.io/part-of: knative-serving
rules:
  - apiGroups: ["serving.knative.dev", "networking.internal.knative.dev", "autoscaling.internal.knative.dev", "caching.internal.knative.dev"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-podspecable-binding
  labels:
    serving.knative.dev/release: "v0.26.0"
    # Labeled to facilitate aggregated cluster roles that act on PodSpecables.
    duck.knative.dev/podspecable: "true"
    app.kubernetes.io/version: "0.26.0"
    app.kubernetes.io/part-of: knative-serving
# Do not use this role directly. These rules will be added to the "podspecable-binder" role.
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - configurations
      - services
    verbs:
      - list
      - watch
      - patch
